Introducción
Una cadena es el tipo de datos de JavaScript para almacenar datos de texto.

Creando una cadena
Crea una cadena envolviendo el texto entre comillas simples o dobles. En Ejercicio, se utilizan comillas simples.

'Hello, World!'
"Hello, World!"
Cadenas como listas de caracteres
Una cadena se puede tratar como una lista de caracteres donde el primer carácter tiene índice 0. Puede acceder a un carácter individual de la cadena usando corchetes y el índice de la letra que desea recuperar.

'cat'[1];
// => 'a'
Puede determinar la cantidad de caracteres en una cadena accediendo a la lengthpropiedad.

'cat'.length;
// => 3
Concatenación y métodos
La forma más sencilla de concatenar cadenas es utilizar el operador de suma +.

'I like' + ' ' + 'cats.';
// => "I like cats."
Las cadenas proporcionan muchos métodos auxiliares; consulte MDN Docs sobre métodos de cadena para obtener una lista completa. La siguiente lista muestra algunos ayudantes de uso común.

toUpperCasey toLowerCase- cambiar el caso de todos los caracteres
trim- eliminar espacios en blanco al principio y al final
includesy - determinar startsWithsi endsWithotra cadena es parte de la cadena dada
slice- extraer una sección de la cuerda
Las cadenas son inmutables en JavaScript. Por lo tanto, una "modificación", por ejemplo mediante alguno de los métodos anteriores, siempre creará una nueva cadena.

Instrucciones
Se ha abierto un nuevo club de poesía en la ciudad y estás pensando en asistir. Debido a que ha habido incidentes en el pasado, el club tiene una política de puertas muy específica que deberás dominar antes de intentar ingresar.

Hay dos puertas en el club de poesía, una delantera y otra trasera, y ambas están vigiladas. Para poder entrar, necesitarás averiguar la contraseña del día.

La contraseña siempre se basa en un poema y se puede derivar en un proceso de dos pasos.

El guardia recitará el poema, una línea a la vez y tendrás que responder con una letra apropiada de esa línea.
El guardia ahora te dirá todas las letras con las que respondiste a la vez y deberás escribirlas en una hoja de papel en un formato específico.
Los detalles del proceso dependen de la puerta por la que intente entrar.

1. Obtén la primera letra de una oración.
Para determinar las letras de la contraseña de la puerta de entrada, debes responder con la primera letra de la línea del poema que el guardia te recita.

Para conseguir una bonita contraseña, a los miembros del club de poesía les gusta utilizar poemas acrósticos . Esto significa que la primera letra de cada oración forma una palabra. Aquí hay un ejemplo de uno de sus escritores favoritos, Michael Lockwood.

Stands so high
Huge hooves too
Impatiently waits for
Reins and harness
Eager to leave
Entonces , cuando el guardia recite Stands so high , responderás S , cuando el guardia recite Pezuñas enormes también , responderás H.

Implementa la función frontDoorResponseque toma una línea del poema como argumento y devuelve la primera letra de esa línea.

frontDoorResponse('Stands so high');
// => "S"
2. Poner en mayúscula una palabra
Ahora que tiene todas las letras correctas, todo lo que necesita hacer para obtener la contraseña de la puerta de entrada es escribir correctamente la palabra en mayúscula.

Implemente la función frontDoorPasswordque acepta una cadena (las letras combinadas que encontró en la tarea 1) y la devuelve correctamente en mayúscula.

frontDoorPassword('SHIRE');
// => "Shire"

frontDoorPassword('shire');
// => "Shire"
3. Obtén la última letra de una oración.
Para determinar las letras de la contraseña de la puerta trasera, debes responder con la última letra de la línea del poema que te recita el guardia.

Los miembros del club de poesía son realmente inteligentes. El poema mencionado antes también es telestich , lo que significa que la última letra de cada frase también forma una palabra:

Stands so high
Huge hooves too
Impatiently waits for
Reins and harness
Eager to leave
Cuando el guardia recite Stands so high , responderás h , cuando el guardia recite Pezuñas enormes también , responderás o .

Tenga en cuenta que a veces el guardia hace pausas estilísticas (en forma de espacios en blanco) al principio o al final de una línea. Deberá ignorar esas pausas para derivar la letra correcta.

Implemente la función backDoorResponseque toma una línea del poema como argumento y devuelve la última letra de esa línea que no es un carácter de espacio en blanco.

backDoorResponse('Stands so high');
// => "h"

backDoorResponse('Stands so high   ');
// => "h"
4. Sea cortés
Para ingresar al club de poesía por la puerta trasera, debes ser muy educado. Entonces, para derivar la contraseña, esta vez debe escribir correctamente la palabra en mayúscula y agregarla ', please'al final.

Implemente la función backDoorPasswordque acepta una cadena (las letras combinadas que encontró en la tarea 3) y devuelve la versión educada de la contraseña en mayúscula.

backDoorPassword('horse');
// => "Horse, please"